--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
Layer:setLocalZOrder(0)

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setBackGroundImage("olympic/res/bg.jpg",0)

panel:setClippingEnabled(false)
panel:setBackGroundImageCapInsets(cc.rect(0,0,1280,720))
panel:setBackGroundColor(cc.c3b(150, 200, 255))
panel:setBackGroundColor(cc.c3b(150, 200, 255),cc.c3b(255, 255, 255))
panel:setBackGroundColorVector(cc.p(0,1))
panel:setBackGroundColorType(1)
panel:setBackGroundColorOpacity(0)
panel:setBackGroundImageScale9Enabled(false)

panel:setTouchEnabled(true)
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setLocalZOrder(0)
panel:setTag(6)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
panel:setVisible(true)
panel:setAnchorPoint(0.5, 0.5)
panel:setPosition(540, 360)
panel:setScaleX(1)
panel:setScaleY(1)
panel:setRotation(0)
panel:setRotationSkewX(0)
panel:setRotationSkewY(0)
panel:setOpacity(255)
panel:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5)
layout:setPositionPercentY(0.5)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0.2083)
layout:setPercentHeight(0.3125)

layout:setSize(cc.size(200, 200))

layout:setHorizontalEdge(3)
layout:setVerticalEdge(0)
layout:setLeftMargin(440)
layout:setRightMargin(440)
layout:setTopMargin(260)
layout:setBottomMargin(260)
layout:setStretchWidthEnabled(false)
layout:setStretchHeightEnabled(false)
Layer:addChild(panel)

--Create line1_1
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resources/common/img/common_img.plist")
local line1_1 = cc.Sprite:createWithSpriteFrameName("Resources/common/img/line1.png")
line1_1:setName("line1_1")
line1_1:setLocalZOrder(0)
line1_1:setTag(7)
line1_1:setCascadeColorEnabled(true)
line1_1:setCascadeOpacityEnabled(true)
line1_1:setVisible(true)
line1_1:setAnchorPoint(0.5, 0.5)
line1_1:setPosition(-108, 307.5)
line1_1:setScaleX(1)
line1_1:setScaleY(1)
line1_1:setRotation(0)
line1_1:setRotationSkewX(0)
line1_1:setRotationSkewY(0)
line1_1:setOpacity(255)
line1_1:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(line1_1)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(-0.54)
layout:setPositionPercentY(1.5375)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0)
layout:setPercentHeight(0)

layout:setSize(cc.size(864, 15))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(-540)
layout:setRightMargin(-124)
layout:setTopMargin(-115)
layout:setBottomMargin(300)
line1_1:setFlippedX(false)
line1_1:setFlippedY(false)
panel:addChild(line1_1)

--Create line1_2
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resources/common/img/common_img.plist")
local line1_2 = cc.Sprite:createWithSpriteFrameName("Resources/common/img/line1.png")
line1_2:setName("line1_2")
line1_2:setLocalZOrder(0)
line1_2:setTag(8)
line1_2:setCascadeColorEnabled(true)
line1_2:setCascadeOpacityEnabled(true)
line1_2:setVisible(true)
line1_2:setAnchorPoint(0.5, 0.5)
line1_2:setPosition(847.5, 7.5)
line1_2:setScaleX(1)
line1_2:setScaleY(1)
line1_2:setRotation(0)
line1_2:setRotationSkewX(0)
line1_2:setRotationSkewY(0)
line1_2:setOpacity(255)
line1_2:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(line1_2)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(0.9809)
layout:setPositionPercentY(0.5)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0)
layout:setPercentHeight(0)

layout:setSize(cc.size(864, 15))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(415.5)
layout:setRightMargin(-415.5)
layout:setTopMargin(0)
layout:setBottomMargin(0)
line1_2:setFlippedX(false)
line1_2:setFlippedY(false)
line1_1:addChild(line1_2)

--Create helpBtn
local helpBtn = ccui.ImageView:create()
helpBtn:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resources/common/button/common_button.plist")
helpBtn:loadTexture("Resources/common/button/D_1.png",1)

helpBtn:setFlippedX(false)
helpBtn:setFlippedY(false)

helpBtn:setScale9Enabled(false)
helpBtn:setCapInsets(cc.rect(0,0,80,69))
helpBtn:setTouchEnabled(false)
helpBtn:setLayoutComponentEnabled(true)
helpBtn:setName("helpBtn")
helpBtn:setLocalZOrder(0)
helpBtn:setTag(164)
helpBtn:setCascadeColorEnabled(true)
helpBtn:setCascadeOpacityEnabled(true)
helpBtn:setVisible(true)
helpBtn:setAnchorPoint(0.5, 0.5)
helpBtn:setPosition(-209.25, 402.75)
helpBtn:setScaleX(1)
helpBtn:setScaleY(1)
helpBtn:setRotation(0)
helpBtn:setRotationSkewX(0)
helpBtn:setRotationSkewY(0)
helpBtn:setOpacity(255)
helpBtn:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(helpBtn)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(-1.0462)
layout:setPositionPercentY(2.0138)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0.0741)
layout:setPercentHeight(0.0958)

layout:setSize(cc.size(80, 69))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(-249.25)
layout:setRightMargin(369.25)
layout:setTopMargin(-237.25)
layout:setBottomMargin(368.25)
layout:setStretchWidthEnabled(false)
layout:setStretchHeightEnabled(false)
panel:addChild(helpBtn)

--Create scoreLabel
local scoreLabel = ccui.Text:create()
scoreLabel:ignoreContentAdaptWithSize(true)
scoreLabel:setTextAreaSize(cc.size(0, 0))
scoreLabel:setFontName("Resources/font/ttf/black_body_2.TTF")
scoreLabel:setFontSize(24)
scoreLabel:setString([[1234567积分]])
scoreLabel:setTextHorizontalAlignment(0)
scoreLabel:setTextVerticalAlignment(0)
scoreLabel:setTouchScaleChangeEnabled(false)
scoreLabel:setFlippedX(false)
scoreLabel:setFlippedY(false)
scoreLabel:enableShadow(cc.c4b(0, 0, 0, 255), cc.size(2, -2), 0)
scoreLabel:setTouchEnabled(false)
scoreLabel:setLayoutComponentEnabled(true)
scoreLabel:setName("scoreLabel")
scoreLabel:setLocalZOrder(0)
scoreLabel:setTag(148)
scoreLabel:setCascadeColorEnabled(true)
scoreLabel:setCascadeOpacityEnabled(true)
scoreLabel:setVisible(true)
scoreLabel:setAnchorPoint(0, 0.5)
scoreLabel:setPosition(428.5, 355)
scoreLabel:setScaleX(1)
scoreLabel:setScaleY(1)
scoreLabel:setRotation(0)
scoreLabel:setRotationSkewX(0)
scoreLabel:setRotationSkewY(0)
scoreLabel:setOpacity(255)
scoreLabel:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(scoreLabel)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(2.1425)
layout:setPositionPercentY(1.775)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0)
layout:setPercentHeight(0)

layout:setSize(cc.size(149, 27))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(428.5)
layout:setRightMargin(-377.5)
layout:setTopMargin(-168.5)
layout:setBottomMargin(341.5)
layout:setStretchWidthEnabled(false)
layout:setStretchHeightEnabled(false)
panel:addChild(scoreLabel)

--Create scoreIcon
cc.SpriteFrameCache:getInstance():addSpriteFrames("olympic/res/olympic.plist")
local scoreIcon = cc.Sprite:createWithSpriteFrameName("olympic/res/jifen.png")
scoreIcon:setName("scoreIcon")
scoreIcon:setLocalZOrder(0)
scoreIcon:setTag(149)
scoreIcon:setCascadeColorEnabled(true)
scoreIcon:setCascadeOpacityEnabled(true)
scoreIcon:setVisible(true)
scoreIcon:setAnchorPoint(0.5, 0.5)
scoreIcon:setPosition(401.5, 356)
scoreIcon:setScaleX(1)
scoreIcon:setScaleY(1)
scoreIcon:setRotation(0)
scoreIcon:setRotationSkewX(0)
scoreIcon:setRotationSkewY(0)
scoreIcon:setOpacity(255)
scoreIcon:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(scoreIcon)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(2.0075)
layout:setPositionPercentY(1.78)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0)
layout:setPercentHeight(0)

layout:setSize(cc.size(49, 51))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(377)
layout:setRightMargin(-226)
layout:setTopMargin(-181.5)
layout:setBottomMargin(330.5)
scoreIcon:setFlippedX(false)
scoreIcon:setFlippedY(false)
panel:addChild(scoreIcon)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

