--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")
Node:setLocalZOrder(0)

--Create Bg
local Bg = cc.Sprite:create("series_recharge/res/1.png")
Bg:setName("Bg")
Bg:setLocalZOrder(0)
Bg:setTag(6)
Bg:setCascadeColorEnabled(true)
Bg:setCascadeOpacityEnabled(true)
Bg:setVisible(true)
Bg:setAnchorPoint(0.5, 0.5)
Bg:setPosition(115, 130)
Bg:setScaleX(1)
Bg:setScaleY(1)
Bg:setRotation(0)
Bg:setRotationSkewX(0)
Bg:setRotationSkewY(0)
Bg:setOpacity(255)
Bg:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(Bg)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(0)
layout:setPositionPercentY(0)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0)
layout:setPercentHeight(0)

layout:setSize(cc.size(219, 252))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(5.5)
layout:setRightMargin(-224.5)
layout:setTopMargin(-256)
layout:setBottomMargin(4)
Bg:setFlippedX(false)
Bg:setFlippedY(false)
Node:addChild(Bg)

--Create Text
local Text = ccui.Text:create()
Text:ignoreContentAdaptWithSize(true)
Text:setTextAreaSize(cc.size(0, 0))
Text:setFontName("Resources/font/ttf/black_body_2.TTF")
Text:setFontSize(22)
Text:setString([[第一天]])
Text:setTextHorizontalAlignment(0)
Text:setTextVerticalAlignment(0)
Text:setTouchScaleChangeEnabled(false)
Text:setFlippedX(false)
Text:setFlippedY(false)
Text:enableOutline(cc.c4b(0, 0, 0, 255), 1)
Text:setTouchEnabled(false)
Text:setLayoutComponentEnabled(true)
Text:setName("Text")
Text:setLocalZOrder(0)
Text:setTag(7)
Text:setCascadeColorEnabled(true)
Text:setCascadeOpacityEnabled(true)
Text:setVisible(true)
Text:setAnchorPoint(0.5, 0.5)
Text:setPosition(109.5, 224.0112)
Text:setScaleX(1)
Text:setScaleY(1)
Text:setRotation(0)
Text:setRotationSkewX(0)
Text:setRotationSkewY(0)
Text:setOpacity(255)
Text:setColor(cc.c3b(250, 250, 75))
layout = ccui.LayoutComponent:bindLayoutComponent(Text)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(0.5)
layout:setPositionPercentY(0.8889)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0.3212)
layout:setPercentHeight(0.1126)

layout:setSize(cc.size(68, 27))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(75.5)
layout:setRightMargin(75.5)
layout:setTopMargin(14.4888)
layout:setBottomMargin(210.5112)
layout:setStretchWidthEnabled(false)
layout:setStretchHeightEnabled(false)
Bg:addChild(Text)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1)
--Create Animation List

result['root'] = Node
return result;
end

return Result

