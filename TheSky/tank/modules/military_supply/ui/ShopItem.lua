--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")
Node:setLocalZOrder(0)

--Create cell_1
innerCSD = require("military_supply.ui.ShopCell")
innerProject = innerCSD.create(callBackProvider)
local cell_1 = innerProject.root
cell_1.animation = innerProject.animation
cell_1:setName("cell_1")
cell_1:setLocalZOrder(0)
cell_1:setTag(26)
cell_1:setCascadeColorEnabled(true)
cell_1:setCascadeOpacityEnabled(true)
cell_1:setVisible(true)
cell_1:setAnchorPoint(0, 0)
cell_1:setPosition(7.0015, 195.0115)
cell_1:setScaleX(1)
cell_1:setScaleY(1)
cell_1:setRotation(0)
cell_1:setRotationSkewX(0)
cell_1:setRotationSkewY(0)
cell_1:setOpacity(255)
cell_1:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(cell_1)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(0)
layout:setPositionPercentY(0)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0)
layout:setPercentHeight(0)

layout:setSize(cc.size(0, 0))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(7.0015)
layout:setRightMargin(-7.0015)
layout:setTopMargin(-195.0115)
layout:setBottomMargin(195.0115)
innerProject.animation:setTimeSpeed(1)
cell_1:runAction(innerProject.animation)
Node:addChild(cell_1)

--Create cell_2
innerCSD = require("military_supply.ui.ShopCell")
innerProject = innerCSD.create(callBackProvider)
local cell_2 = innerProject.root
cell_2.animation = innerProject.animation
cell_2:setName("cell_2")
cell_2:setLocalZOrder(0)
cell_2:setTag(35)
cell_2:setCascadeColorEnabled(true)
cell_2:setCascadeOpacityEnabled(true)
cell_2:setVisible(true)
cell_2:setAnchorPoint(0, 0)
cell_2:setPosition(7.0015, 2.4898)
cell_2:setScaleX(1)
cell_2:setScaleY(1)
cell_2:setRotation(0)
cell_2:setRotationSkewX(0)
cell_2:setRotationSkewY(0)
cell_2:setOpacity(255)
cell_2:setColor(cc.c3b(255, 255, 255))
layout = ccui.LayoutComponent:bindLayoutComponent(cell_2)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(0)
layout:setPositionPercentY(0)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0)
layout:setPercentHeight(0)

layout:setSize(cc.size(0, 0))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(7.0015)
layout:setRightMargin(-7.0015)
layout:setTopMargin(-2.4898)
layout:setBottomMargin(2.4898)
innerProject.animation:setTimeSpeed(1)
cell_2:runAction(innerProject.animation)
Node:addChild(cell_2)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1)
--Create Animation List

result['root'] = Node
return result;
end

return Result

