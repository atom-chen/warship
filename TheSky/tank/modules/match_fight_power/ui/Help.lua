--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")
Node:setLocalZOrder(0)

--Create Help_txt
local Help_txt = ccui.Text:create()
Help_txt:ignoreContentAdaptWithSize(false)
Help_txt:setFontName("Resources/font/ttf/black_body_2.TTF")
Help_txt:setFontSize(24)
Help_txt:setString([[1.活动开启时间
为服务器开启第3日05:00-第8日05:00，奖励发放依据为第7日
21:30战力排行榜排名（通过邮件发放）
2.第7日21:30根据战力，可以获得战力达标奖励（达标奖励按照最高战力通过发放，不累计）
3.战力相同，按照排名时间先后顺序
4.1-10名排名奖励需要达到60W战力值]])
Help_txt:setTextHorizontalAlignment(0)
Help_txt:setTextVerticalAlignment(0)
Help_txt:setTouchScaleChangeEnabled(false)
Help_txt:setFlippedX(false)
Help_txt:setFlippedY(false)
Help_txt:enableOutline(cc.c4b(0, 0, 0, 255), 1)
Help_txt:setTouchEnabled(false)
Help_txt:setLayoutComponentEnabled(true)
Help_txt:setName("Help_txt")
Help_txt:setLocalZOrder(0)
Help_txt:setTag(48)
Help_txt:setCascadeColorEnabled(true)
Help_txt:setCascadeOpacityEnabled(true)
Help_txt:setVisible(true)
Help_txt:setAnchorPoint(0, 1)
Help_txt:setPosition(2.5, 148.7783)
Help_txt:setScaleX(1)
Help_txt:setScaleY(1)
Help_txt:setRotation(0)
Help_txt:setRotationSkewX(0)
Help_txt:setRotationSkewY(0)
Help_txt:setOpacity(255)
Help_txt:setColor(cc.c3b(255, 255, 119))
layout = ccui.LayoutComponent:bindLayoutComponent(Help_txt)
layout:setPositionPercentXEnabled(false)
layout:setPositionPercentYEnabled(false)
layout:setPositionPercentX(0)
layout:setPositionPercentY(0)
layout:setPercentWidthEnabled(false)
layout:setPercentHeightEnabled(false)
layout:setPercentWidth(0)
layout:setPercentHeight(0)

layout:setSize(cc.size(720, 1000))

layout:setHorizontalEdge(0)
layout:setVerticalEdge(0)
layout:setLeftMargin(2.5)
layout:setRightMargin(-722.5)
layout:setTopMargin(-148.7783)
layout:setBottomMargin(-851.2217)
layout:setStretchWidthEnabled(false)
layout:setStretchHeightEnabled(false)
Node:addChild(Help_txt)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1)
--Create Animation List

result['root'] = Node
return result;
end

return Result

